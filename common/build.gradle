import javax.inject.Inject

plugins {
    alias(libs.plugins.android.library)
}

android {
    namespace 'ru.coolsoft.common'
    compileSdk 35

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

ext {
    lombok_version = "1.18.39"
    dirsToDelombok = ["src/main/java/ru/coolsoft/common/enums"] as String[]
}

dependencies {

    implementation libs.appcompat
    implementation libs.material

    compileOnly name: "lombok-${project.ext.lombok_version}-ext"
    annotationProcessor name: "lombok-${project.ext.lombok_version}-ext"

    testImplementation libs.junit
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
}

// lombok workaround
interface InjectedExecOps {
    @Inject
    ExecOperations getExecOps()
}

tasks.register('delombok') {
    group = "lombok"

    dirsToDelombok.each {path->
        def ieops = objects.newInstance(InjectedExecOps)
        ieops.execOps.exec {
            commandLine "java", "-jar", "../libs/lombok-${lombok_version}-ext.jar", "delombok", path, "-d", "${path}_delombok"
        }

        file(path).listFiles().each {
            it.renameTo(file("$path/${it.name}.lombok"))
        }
    }
}

tasks.register('undelombok') {
    group = "lombok"

    dirsToDelombok.each {path->
        file(path).listFiles().each {
            if (it.name.endsWith(".lombok")) {
                it.renameTo(file("$path/${it.name.with {it.substring(0, it.lastIndexOf(".lombok"))}}"))
            }
        }
        delete(file("${path}_delombok"))
    }
}

// VS Code Workaround
/* 
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

sourceSets{
    main {
        java {
            srcDirs 'src/main/java'
        }
    }
}
*/